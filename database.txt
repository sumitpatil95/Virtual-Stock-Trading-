-- Create database
CREATE DATABASE virtual_stock_trading;

-- Use the newly created database
USE virtual_stock_trading;

-- Create a table for storing user data
CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create a table for storing stock information
CREATE TABLE stocks (
    id INT AUTO_INCREMENT PRIMARY KEY,
    symbol VARCHAR(10) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    market_cap BIGINT,
    pe_ratio FLOAT,
    price FLOAT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create a table for user portfolios
CREATE TABLE portfolios (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    stock_id INT NOT NULL,
    quantity INT NOT NULL DEFAULT 0,
    average_purchase_price FLOAT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (stock_id) REFERENCES stocks(id) ON DELETE CASCADE
);

-- Create a table for storing transactions (buy/sell orders)
CREATE TABLE transactions (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    stock_id INT NOT NULL,
    quantity INT NOT NULL,
    transaction_type ENUM('buy', 'sell') NOT NULL,
    price FLOAT NOT NULL,
    transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (stock_id) REFERENCES stocks(id) ON DELETE CASCADE
);

-- Create a table for storing historical stock prices
CREATE TABLE stock_prices (
    id INT AUTO_INCREMENT PRIMARY KEY,
    stock_id INT NOT NULL,
    price FLOAT NOT NULL,
    date DATE NOT NULL,
    FOREIGN KEY (stock_id) REFERENCES stocks(id) ON DELETE CASCADE
);

-- Create a table for storing stock watchlist
CREATE TABLE watchlist (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    stock_id INT NOT NULL,
    added_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (stock_id) REFERENCES stocks(id) ON DELETE CASCADE
);

-- Sample data for users
INSERT INTO users (username, email, password) VALUES
('john_doe', 'john@example.com', 'hashed_password_1'),
('jane_smith', 'jane@example.com', 'hashed_password_2'),
('alice_jones', 'alice@example.com', 'hashed_password_3'),
('bob_brown', 'bob@example.com', 'hashed_password_4'),
('charlie_black', 'charlie@example.com', 'hashed_password_5'),
('david_white', 'david@example.com', 'hashed_password_6'),
('eve_green', 'eve@example.com', 'hashed_password_7'),
('frank_yellow', 'frank@example.com', 'hashed_password_8'),
('grace_purple', 'grace@example.com', 'hashed_password_9'),
('heidi_red', 'heidi@example.com', 'hashed_password_10');

-- Sample data for stocks
INSERT INTO stocks (symbol, name, market_cap, pe_ratio, price) VALUES
('AAPL', 'Apple Inc.', 3000000000000, 28.66, 150.00),
('GOOGL', 'Alphabet Inc.', 2000000000000, 23.34, 2800.00),
('AMZN', 'Amazon.com Inc.', 1700000000000, 60.47, 3500.00),
('TSLA', 'Tesla Inc.', 900000000000, 88.70, 800.00),
('MSFT', 'Microsoft Corporation', 2200000000000, 32.57, 300.00);

-- Sample data for portfolios
INSERT INTO portfolios (user_id, stock_id, quantity, average_purchase_price) VALUES
(1, 1, 10, 140.00),  -- User 1 holds 10 shares of Apple
(1, 2, 5, 2500.00),  -- User 1 holds 5 shares of Alphabet
(2, 3, 8, 3400.00);  -- User 2 holds 8 shares of Amazon

-- Sample data for transactions
INSERT INTO transactions (user_id, stock_id, quantity, transaction_type, price) VALUES
(1, 1, 10, 'buy', 140.00),   -- User 1 bought 10 shares of Apple
(1, 2, 5, 'buy', 2500.00),   -- User 1 bought 5 shares of Alphabet
(2, 3, 8, 'buy', 3400.00),   -- User 2 bought 8 shares of Amazon
(1, 1, 5, 'sell', 150.00);   -- User 1 sold 5 shares of Apple

-- Sample data for stock prices
INSERT INTO stock_prices (stock_id, price, date) VALUES
(1, 150.00, '2024-10-24'),   -- Price for Apple on a specific date
(2, 2800.00, '2024-10-24'),  -- Price for Alphabet on a specific date
(3, 3500.00, '2024-10-24');  -- Price for Amazon on a specific date

-- Sample data for watchlist
INSERT INTO watchlist (user_id, stock_id) VALUES
(1, 3),  -- User 1 adds Amazon to their watchlist
(2, 1);  -- User 2 adds Apple to their watchlist
